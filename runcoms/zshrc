# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Source /usr/share/Modules/init/zsh if it exists
if [[ -s "/usr/share/Modules/init/zsh" ]]; then
  source /usr/share/Modules/init/zsh
fi

#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Source API keys if they exist
if [[ -f "$HOME/.api_keys" ]]; then
  source "$HOME/.api_keys"
fi

# Customize to your needs...
unset SSH_ASKPASS

# Key bindings
bindkey '^H' backward-kill-word   # Ctrl+Backspace
bindkey '^[[3;5~' kill-word       # Ctrl+Delete

# Custom functions
function check_and_handle_venv() {
  if [[ -z "$VIRTUAL_ENV" ]]; then
    if [[ -d ./.venv ]]; then
      echo "ðŸ“¦ Activating virtual environment in $(pwd)/.venv"
      . .venv/bin/activate
    fi
  else
    parentdir="$(dirname "$VIRTUAL_ENV")"
    if [[ "$PWD"/ != "$parentdir"/* ]]; then
      echo "ðŸ”Œ Deactivating virtual environment from $VIRTUAL_ENV"
      deactivate
    fi
  fi
}

# Check for virtual environment at login
check_and_handle_venv

function cd() {
  builtin cd "$@"
  check_and_handle_venv
}

alias t=tmux
alias ta="tmux attach"
alias tl="tmux ls"
alias sm="squeue --me"
alias wsync="wandb sync --sync-all"
alias c=clear
alias gco="git checkout"
alias gcm="git commit -m"
alias gpl="git pull"
alias gplr="git pull --rebase"
alias gps="git push"

function wsync_loop() {
  while true; do
    wsync
    sleep 5m
  done
}

# Machine specific configurations
if [[ "$(whoami)" == "uml34gj" ]]; then

  . "$HOME/.local/bin/env"

  export PATH="$HOME/bin:$PATH"
  export UV_HTTP_TIMEOUT=36000
  export TRANSFORMERS_OFFLINE=1 # job will try to fetch from cache instead of trying to download
  export UV_NO_MANAGED_PYTHON=1 # disable uv's managed python, use system python instead

  co() {
    cleanup() {
      echo "\nKilling code tunnel processes..."
      pkill -f "tunnel service internal-run"
    } 
    trap cleanup EXIT SIGHUP SIGINT SIGTERM SIGQUIT
    connect tunnel
  }

  switch() {
    if [ -z "$1" ]; then
      echo "Usage: switch <environment_name>"
      return 1
    fi
    eval $(idrenv -d $1)
  }

  alias run_cpu="srun --cpus-per-task=6 --hint=nomultithread --partition=prepost --account=ioj@cpu --qos=qos_cpu-dev --output=run_cpu.out --error=run_cpu.out"
  alias run_cpu_interactive="srun --cpus-per-task=6 --hint=nomultithread --partition=prepost --account=ioj@cpu --qos=qos_cpu-dev --pty zsh -i"
  alias run_cpu48="srun --cpus-per-task=48 --hint=nomultithread --partition=prepost --account=ioj@cpu --qos=qos_cpu-dev --output=run_cpu48.out --error=run_cpu48.out"
  alias run_cpu48_interactive="srun --cpus-per-task=48 --hint=nomultithread --partition=prepost --account=ioj@cpu --qos=qos_cpu-dev --pty zsh -i"
  alias run_cpu40_p1="srun --cpus-per-task=40 --hint=nomultithread --account=ioj@cpu --qos=qos_cpu-dev --output=run_cpu40_p1.out --error=run_cpu40_p1.out"
  alias run_cpu40_p1_interactive="srun --cpus-per-task=40 --hint=nomultithread --account=ioj@cpu --qos=qos_cpu-dev --pty zsh -i"
  alias run_h100="srun --gres=gpu:1 --constraint=h100 --cpus-per-task=24 --hint=nomultithread --account=ioj@h100 --qos=qos_gpu_h100-dev --time=2:00:00 --output=run_h100.out --error=run_h100.out"
  alias run_h100_interactive="srun --gres=gpu:1 --constraint=h100 --cpus-per-task=24 --hint=nomultithread --account=ioj@h100 --qos=qos_gpu_h100-dev --time=2:00:00 --pty zsh -i"
fi

if [[ "$(hostname)" == "ljalouzot" ]]; then
  export PATH="$HOME/.local/bin:$PATH"
  export GTK_USE_PORTAL=1
  alias mount-unicog="sshfs -o follow_symlinks unicog:/data/ljalouzot /home/ljalouzot/data/unicog"
  alias mount-jz="sshfs -o follow_symlinks jz:/lustre/fswork/projects/rech/ioj/uml34gj /home/ljalouzot/data/jz"
  alias mount-coml="sshfs -o follow_symlinks oberon:/scratch2/ljalouzot /home/ljalouzot/data/coml"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# [[ ! -f ~/.conda_setup.sh ]] || source ~/.conda_setup.sh